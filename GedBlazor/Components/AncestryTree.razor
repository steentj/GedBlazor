@using System.Collections
@using GedBlazor.Models

@if (Proband == null || Individuals == null)
{
    <div class="alert alert-info">Vælg venligst en proband for at se slægtstræet.</div>
}
else
{
    <RadzenTree Data="@individuals"
                Style="height: auto">
        <RadzenTreeLevel TextProperty="FullName" 
                         ChildrenProperty="Ancestors" 
                         Expanded=@ShouldExpand
                         HasChildren="@(i => ((Individual)i).Ancestors.Any() )" />
    </RadzenTree>
}

@code {
    [Parameter]
    public Individual? Proband { get; set; }
    [Parameter]
    public Dictionary<string, Individual>? Individuals { get; set; }

    IEnumerable<Individual> individuals = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        individuals = Individuals != null 
            ? Individuals.Values.Where(i => i.Anenummer == 1) 
            : new List<Individual>();
    }
    
    bool ShouldExpand(object data)
    {
        var ind = data as Individual;

        return ind is not null && ind.Anenummer <= 3;
    }
}


